"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
/**
 * This is organized in this module just for good housekeeping
 * However it is provided via the CoreModule to ensure it's
 * a singleton the entire app can use.
 * If your module service is *only* used in this module
 * you can have the service provided by this module.
 * In this case however, we want this service to be a true singleton
 * which can be injected into any component/service anywhere and
 * it will be the same instance therefore this is provided by the CoreModule.
 */
var ItemService = /** @class */ (function () {
    function ItemService() {
        this.items = new Array({ id: 1, name: 'Ter Stegen', role: 'Goalkeeper' }, { id: 3, name: 'Piqué', role: 'Defender' }, { id: 4, name: 'I. Rakitic', role: 'Midfielder' }, { id: 5, name: 'Sergio', role: 'Midfielder' }, { id: 6, name: 'Denis Suárez', role: 'Midfielder' }, { id: 7, name: 'Arda', role: 'Midfielder' }, { id: 8, name: 'A. Iniesta', role: 'Midfielder' }, { id: 9, name: 'Suárez', role: 'Forward' }, { id: 10, name: 'Messi', role: 'Forward' }, { id: 11, name: 'Neymar', role: 'Forward' }, { id: 12, name: 'Rafinha', role: 'Midfielder' }, { id: 13, name: 'Cillessen', role: 'Goalkeeper' }, { id: 14, name: 'Mascherano', role: 'Defender' }, { id: 17, name: 'Paco Alcácer', role: 'Forward' }, { id: 18, name: 'Jordi Alba', role: 'Defender' }, { id: 19, name: 'Digne', role: 'Defender' }, { id: 20, name: 'Sergi Roberto', role: 'Midfielder' }, { id: 21, name: 'André Gomes', role: 'Midfielder' }, { id: 22, name: 'Aleix Vidal', role: 'Midfielder' }, { id: 23, name: 'Umtiti', role: 'Defender' }, { id: 24, name: 'Mathieu', role: 'Defender' }, { id: 25, name: 'Masip', role: 'Goalkeeper' });
    }
    ItemService.prototype.getItems = function () {
        return this.items;
    };
    ItemService.prototype.getItem = function (id) {
        return this.items.filter(function (item) { return item.id === id; })[0];
    };
    ItemService = __decorate([
        core_1.Injectable()
    ], ItemService);
    return ItemService;
}());
exports.ItemService = ItemService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlbS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaXRlbS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsc0NBQTJDO0FBSTNDOzs7Ozs7Ozs7R0FTRztBQUVIO0lBREE7UUFFVSxVQUFLLEdBQUcsSUFBSSxLQUFLLENBQ3ZCLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsRUFDakQsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxFQUMxQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLEVBQ2pELEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsRUFDN0MsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxFQUNuRCxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLEVBQzNDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsRUFDakQsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxFQUMxQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLEVBQzFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsRUFDM0MsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxFQUMvQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLEVBQ2pELEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsRUFDaEQsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxFQUNqRCxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLEVBQ2hELEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsRUFDM0MsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxFQUNyRCxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLEVBQ25ELEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsRUFDbkQsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxFQUM1QyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLEVBQzdDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsQ0FDOUMsQ0FBQztJQVNKLENBQUM7SUFQQyw4QkFBUSxHQUFSO1FBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUVELDZCQUFPLEdBQVAsVUFBUSxFQUFVO1FBQ2hCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxVQUFBLElBQUksSUFBSSxPQUFBLElBQUksQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFkLENBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFoQ1UsV0FBVztRQUR2QixpQkFBVSxFQUFFO09BQ0EsV0FBVyxDQWlDdkI7SUFBRCxrQkFBQztDQUFBLEFBakNELElBaUNDO0FBakNZLGtDQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgSXRlbSB9IGZyb20gJy4uL21vZGVscyc7XHJcblxyXG4vKipcclxuICogVGhpcyBpcyBvcmdhbml6ZWQgaW4gdGhpcyBtb2R1bGUganVzdCBmb3IgZ29vZCBob3VzZWtlZXBpbmdcclxuICogSG93ZXZlciBpdCBpcyBwcm92aWRlZCB2aWEgdGhlIENvcmVNb2R1bGUgdG8gZW5zdXJlIGl0J3NcclxuICogYSBzaW5nbGV0b24gdGhlIGVudGlyZSBhcHAgY2FuIHVzZS5cclxuICogSWYgeW91ciBtb2R1bGUgc2VydmljZSBpcyAqb25seSogdXNlZCBpbiB0aGlzIG1vZHVsZVxyXG4gKiB5b3UgY2FuIGhhdmUgdGhlIHNlcnZpY2UgcHJvdmlkZWQgYnkgdGhpcyBtb2R1bGUuXHJcbiAqIEluIHRoaXMgY2FzZSBob3dldmVyLCB3ZSB3YW50IHRoaXMgc2VydmljZSB0byBiZSBhIHRydWUgc2luZ2xldG9uXHJcbiAqIHdoaWNoIGNhbiBiZSBpbmplY3RlZCBpbnRvIGFueSBjb21wb25lbnQvc2VydmljZSBhbnl3aGVyZSBhbmRcclxuICogaXQgd2lsbCBiZSB0aGUgc2FtZSBpbnN0YW5jZSB0aGVyZWZvcmUgdGhpcyBpcyBwcm92aWRlZCBieSB0aGUgQ29yZU1vZHVsZS5cclxuICovXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIEl0ZW1TZXJ2aWNlIHtcclxuICBwcml2YXRlIGl0ZW1zID0gbmV3IEFycmF5PEl0ZW0+KFxyXG4gICAgeyBpZDogMSwgbmFtZTogJ1RlciBTdGVnZW4nLCByb2xlOiAnR29hbGtlZXBlcicgfSxcclxuICAgIHsgaWQ6IDMsIG5hbWU6ICdQaXF1w6knLCByb2xlOiAnRGVmZW5kZXInIH0sXHJcbiAgICB7IGlkOiA0LCBuYW1lOiAnSS4gUmFraXRpYycsIHJvbGU6ICdNaWRmaWVsZGVyJyB9LFxyXG4gICAgeyBpZDogNSwgbmFtZTogJ1NlcmdpbycsIHJvbGU6ICdNaWRmaWVsZGVyJyB9LFxyXG4gICAgeyBpZDogNiwgbmFtZTogJ0RlbmlzIFN1w6FyZXonLCByb2xlOiAnTWlkZmllbGRlcicgfSxcclxuICAgIHsgaWQ6IDcsIG5hbWU6ICdBcmRhJywgcm9sZTogJ01pZGZpZWxkZXInIH0sXHJcbiAgICB7IGlkOiA4LCBuYW1lOiAnQS4gSW5pZXN0YScsIHJvbGU6ICdNaWRmaWVsZGVyJyB9LFxyXG4gICAgeyBpZDogOSwgbmFtZTogJ1N1w6FyZXonLCByb2xlOiAnRm9yd2FyZCcgfSxcclxuICAgIHsgaWQ6IDEwLCBuYW1lOiAnTWVzc2knLCByb2xlOiAnRm9yd2FyZCcgfSxcclxuICAgIHsgaWQ6IDExLCBuYW1lOiAnTmV5bWFyJywgcm9sZTogJ0ZvcndhcmQnIH0sXHJcbiAgICB7IGlkOiAxMiwgbmFtZTogJ1JhZmluaGEnLCByb2xlOiAnTWlkZmllbGRlcicgfSxcclxuICAgIHsgaWQ6IDEzLCBuYW1lOiAnQ2lsbGVzc2VuJywgcm9sZTogJ0dvYWxrZWVwZXInIH0sXHJcbiAgICB7IGlkOiAxNCwgbmFtZTogJ01hc2NoZXJhbm8nLCByb2xlOiAnRGVmZW5kZXInIH0sXHJcbiAgICB7IGlkOiAxNywgbmFtZTogJ1BhY28gQWxjw6FjZXInLCByb2xlOiAnRm9yd2FyZCcgfSxcclxuICAgIHsgaWQ6IDE4LCBuYW1lOiAnSm9yZGkgQWxiYScsIHJvbGU6ICdEZWZlbmRlcicgfSxcclxuICAgIHsgaWQ6IDE5LCBuYW1lOiAnRGlnbmUnLCByb2xlOiAnRGVmZW5kZXInIH0sXHJcbiAgICB7IGlkOiAyMCwgbmFtZTogJ1NlcmdpIFJvYmVydG8nLCByb2xlOiAnTWlkZmllbGRlcicgfSxcclxuICAgIHsgaWQ6IDIxLCBuYW1lOiAnQW5kcsOpIEdvbWVzJywgcm9sZTogJ01pZGZpZWxkZXInIH0sXHJcbiAgICB7IGlkOiAyMiwgbmFtZTogJ0FsZWl4IFZpZGFsJywgcm9sZTogJ01pZGZpZWxkZXInIH0sXHJcbiAgICB7IGlkOiAyMywgbmFtZTogJ1VtdGl0aScsIHJvbGU6ICdEZWZlbmRlcicgfSxcclxuICAgIHsgaWQ6IDI0LCBuYW1lOiAnTWF0aGlldScsIHJvbGU6ICdEZWZlbmRlcicgfSxcclxuICAgIHsgaWQ6IDI1LCBuYW1lOiAnTWFzaXAnLCByb2xlOiAnR29hbGtlZXBlcicgfVxyXG4gICk7XHJcblxyXG4gIGdldEl0ZW1zKCk6IEl0ZW1bXSB7XHJcbiAgICByZXR1cm4gdGhpcy5pdGVtcztcclxuICB9XHJcblxyXG4gIGdldEl0ZW0oaWQ6IG51bWJlcik6IEl0ZW0ge1xyXG4gICAgcmV0dXJuIHRoaXMuaXRlbXMuZmlsdGVyKGl0ZW0gPT4gaXRlbS5pZCA9PT0gaWQpWzBdO1xyXG4gIH1cclxufVxyXG4iXX0=